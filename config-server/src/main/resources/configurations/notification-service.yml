eureka:
    instance:
      hostname: localhost
    client:
      service-url:
        defaultZone: http://localhost:8761/eureka/
spring:
  data:
    mongodb:
      username: nourhan
      password: password
      host: localhost
      port: 27017
      database: notifications_db
      authentication-database: notifications_db
  kafka:
    consumer:
      bootstrap-servers: localhost:9092  # Kafka broker address (change to match your Kafka broker)
      group-id: notification-service-group
      auto-offset-reset: earliest  # Starts reading from the earliest message if no offset is committed
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    listener:
      concurrency: 3  # Optional: You can scale the number of listeners based on your needs
      missing-topics-fatal: false  # If the topic is missing, Kafka won't throw an error
    properties:
      spring.json.trusted.packages: '*'
      spring.json.type.mapping: orderConfirmation:com.example.notification_service.DTO.OrderConfirmation
  mail:
    host: smtp.example.com
    port: 587
    username: wtest1284@gmail.com
    password: lhzw tjtx qwlk chee
    properties:
      mail:
        smtp:
          trust: '*'
        auth: true
        starttls:
          enabled: true
server:
  port: 8042
application:
  config:
    user-service-url: http://localhost:8222/api/v1/users
